/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bracuclassroom;

import static bracuclassroom.HomePageFacultyOntheGo.FacultyID;
import javax.swing.JFrame;
import java.text.*;
import java.sql.*;
import java.util.logging.Logger;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;

/**
 *
 * @author hamza
 */
public class SectionSelection extends javax.swing.JFrame {
public static String FacultyID;
    private String[] args;
    /**
     * Creates new form SectionSelection
     */
    public SectionSelection() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize
     * the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1_FirstSection = new javax.swing.JTextField();
        jButton1_BeforeMids = new javax.swing.JButton();
        jTextField2_SecondSection = new javax.swing.JTextField();
        jTextField3_ThirdSection = new javax.swing.JTextField();
        jTextField4_FourthSection = new javax.swing.JTextField();
        jTextField5_FifthSection = new javax.swing.JTextField();
        jTextField7_Course = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton2_Finals = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(75, 119, 190));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Statiscal Views");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 230, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 70));

        jTextField1_FirstSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1_FirstSectionActionPerformed(evt);
            }
        });

        jButton1_BeforeMids.setBackground(new java.awt.Color(75, 119, 190));
        jButton1_BeforeMids.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1_BeforeMids.setText("Show the statistics for first 50");
        jButton1_BeforeMids.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_BeforeMidsActionPerformed(evt);
            }
        });

        jTextField2_SecondSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2_SecondSectionActionPerformed(evt);
            }
        });

        jTextField3_ThirdSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3_ThirdSectionActionPerformed(evt);
            }
        });

        jTextField7_Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7_CourseActionPerformed(evt);
            }
        });

        jLabel2.setText("First Section");

        jLabel3.setText("Second Section");

        jLabel4.setText("Third Section");

        jLabel5.setText("Fourth Section");

        jLabel6.setText("Fifth Section");

        jLabel7.setText("Course");

        jButton2_Finals.setBackground(new java.awt.Color(75, 119, 190));
        jButton2_Finals.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2_Finals.setText("Show the statistics for 100");
        jButton2_Finals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2_FinalsActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Go back");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel2))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField1_FirstSection, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2_SecondSection, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(12, 12, 12)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField7_Course, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jTextField3_ThirdSection, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField4_FourthSection, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField5_FifthSection, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel4)
                                .addGap(71, 71, 71)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(31, 31, 31))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jButton1_BeforeMids)
                        .addGap(56, 56, 56)
                        .addComponent(jButton2_Finals, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1_FirstSection, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2_SecondSection, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3_ThirdSection, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4_FourthSection, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5_FifthSection, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel6)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addComponent(jTextField7_Course, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1_BeforeMids, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2_Finals, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 670, 260));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1_BeforeMidsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_BeforeMidsActionPerformed
// for the number of the particular section
        int First;
        int Second;
        int Third;
        int Fourth;
        int Fifth;
        
        int count1=0;
        int count2=0;
        int count3=0;
        int count4=0;
        int count5=0;
        
        String first;
        String second;
        String third;
        String fourth;
        String fifth;
        
        String query1;
        String query2;
        String query3;
        String query4;
        String query5;
        
        String query6;
        String query7;
        String query8;
        String query9;
        String query10;
        
        PreparedStatement ps1=null;
        PreparedStatement ps2=null;
        PreparedStatement ps3=null;
        PreparedStatement ps4=null;
        PreparedStatement ps5=null;
        
        PreparedStatement ps6=null;
        PreparedStatement ps7=null;
        PreparedStatement ps8=null;
        PreparedStatement ps9=null;
        PreparedStatement ps10=null;
        
        
        ResultSet rs1;
        ResultSet rs2;
        ResultSet rs3;
        ResultSet rs4;
        ResultSet rs5;
        
        ResultSet rs6;
        ResultSet rs7;
        ResultSet rs8;
        ResultSet rs9;
        ResultSet rs10;
        
        float average1=0;
        float average2=0;
        float average3=0;
        float average4=0;
        float average5=0;
        ///// for the number of the particular section
        String Course;
//////////////////////////////////////////////////////////////////

first=jTextField1_FirstSection.getText();
second=jTextField2_SecondSection.getText();
third=jTextField3_ThirdSection.getText();
fourth=jTextField4_FourthSection.getText();
fifth=jTextField5_FifthSection.getText();

        if(first.equals("")){
      First=0;
        }else{
         First=Integer.parseInt(jTextField1_FirstSection.getText());//////////
        }
       if(second.equals("")){
      Second=0; 
       }else{
       Second=Integer.parseInt(jTextField2_SecondSection.getText());///////////
       }
       if(third.equals("")){
       Third=0;
       }else {
       Third=Integer.parseInt(jTextField3_ThirdSection.getText());//////
       }if(fourth.equals("")){
       Fourth=0;
       }else{
       Fourth=Integer.parseInt(jTextField4_FourthSection.getText());//////
       }
       if(fifth.equals("")){
       Fifth=0;
       }else{
       Fifth=Integer.parseInt(jTextField5_FifthSection.getText());/////////
       }
       Course=jTextField7_Course.getText();
        
       /////////////////////////////////////////////////////////////////////////////////////
      //ok etotuku
        // whether null or not
        //the values have been assigned
        try{
        if(First==0){
        count1=0;
        }else{
            query1="SELECT avg(`TotalMarksBeforeMid`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=? "; //the query for the average
        
   ps1 = MyConnection.getConnection().prepareStatement(query1);
    ps1.setString(1, String.valueOf(First));  //First
    ps1.setString(2, Course);  
    ps1.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs1 = ps1.executeQuery();

  ////////////////////////////////////////////////////
            if(rs1.next()){
            average1=rs1.getFloat(1);
             query6="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksBeforeMid`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps6 = MyConnection.getConnection().prepareStatement(query6);
    ps6.setFloat(1,average1) ;  //First
    ps6.setString(2,FacultyID );  
    ps6.setString(3,String.valueOf(First));
 ps6.setString(4,Course);
 rs6=ps6.executeQuery();
 if(rs6.next()){
 count1=rs6.getInt(1);
 System.out.println("Count1 "+ count1);
 }else{
 System.out.println("No count");
 }
 ///////////////////////////////ektar count kora
//        System.out.println(average1);
            }else{
   System.out.println("empty");
            }
            
        }
        if(Second==0){
        
        }
        else{
            query2="SELECT avg(`TotalMarksBeforeMid`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=?"; //the query for the average
        
             ps2 = MyConnection.getConnection().prepareStatement(query2);
    ps2.setString(1, String.valueOf(Second));  //First
    ps2.setString(2, Course);  
    ps2.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs2 = ps2.executeQuery();
 
 if(rs2.next()){
            average2=rs2.getFloat(1);
//            System.out.println(average2);
 query7="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksBeforeMid`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps7 = MyConnection.getConnection().prepareStatement(query7);
    ps7.setFloat(1,average2) ;  //First
    ps7.setString(2,FacultyID );  
    ps7.setString(3,String.valueOf(Second));
 ps7.setString(4,Course);
 rs7=ps7.executeQuery();
 if(rs7.next()){
 count2=rs7.getInt(1);
 System.out.println("Count2 "+ count2);
 }else{
 System.out.println("No count");
 }
            }else{
   System.out.println("empty");
            }
 
        }
        if(Third==0){
        
        }else{
            query3="SELECT avg(`TotalMarksBeforeMid`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=?"; //the query for the average
        
              ps3 = MyConnection.getConnection().prepareStatement(query3);
    ps3.setString(1, String.valueOf(Third));  //First
    ps3.setString(2, Course);  
    ps3.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs3 = ps3.executeQuery();
 if(rs3.next()){
            average3=rs3.getFloat(1);
             query8="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksBeforeMid`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps8 = MyConnection.getConnection().prepareStatement(query8);
    ps8.setFloat(1,average3) ;  //First
    ps8.setString(2,FacultyID );  
    ps8.setString(3,String.valueOf(Third));
 ps8.setString(4,Course);
 rs8=ps8.executeQuery();
 if(rs8.next()){
 count3=rs8.getInt(1);
 System.out.println("Count3 "+ count3);
 }else{
 System.out.println("No count");
 }
//            System.out.println(average3);
            }else{
   System.out.println("empty");
            }
        }
        
        
        
        if(Fourth==0){
        
        }else{
            query4="SELECT avg(`TotalMarksBeforeMid`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=?"; //the query for the average
         ps4 = MyConnection.getConnection().prepareStatement(query4);
    ps4.setString(1, String.valueOf(Fourth));  //First
    ps4.setString(2, Course);  
    ps4.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs4 = ps4.executeQuery();
            if(rs4.next()){
            average4=rs4.getFloat(1);
             query9="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksBeforeMid`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps9 = MyConnection.getConnection().prepareStatement(query9);
    ps9.setFloat(1,average4) ;  //First
    ps9.setString(2,FacultyID );  
    ps9.setString(3,String.valueOf(Fourth));
 ps9.setString(4,Course);
 rs9=ps9.executeQuery();
 if(rs9.next()){
 count4=rs9.getInt(1);
 System.out.println("Count4 "+ count4);
 }else{
 System.out.println("No count");
 }
//            System.out.println(average4);
            }else{
   System.out.println("empty");
            }
        }
        if(Fifth==0){
        
        }else{
            query5="SELECT avg(`TotalMarksBeforeMid`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=?"; //the query for the average
          ps5 = MyConnection.getConnection().prepareStatement(query5);
    ps5.setString(1, String.valueOf(Fifth));  //First
    ps5.setString(2, Course);  
    ps5.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs5 = ps5.executeQuery();
 if(rs5.next()){
            average5=rs5.getFloat(1);
             query10="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksBeforeMid`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps10 = MyConnection.getConnection().prepareStatement(query10);
    ps10.setFloat(1,average5) ;  //First
    ps10.setString(2,FacultyID );  
    ps10.setString(3,String.valueOf(Fifth));
 ps10.setString(4,Course);
 rs10=ps10.executeQuery();
 if(rs10.next()){
 count5=rs10.getInt(1);
 System.out.println("Count5 "+ count5);
 }else{
 System.out.println("No count");
 }
//            System.out.println(average5);
            }else{
   System.out.println("empty");
            }
            
        }
        
        //////////////////////////average calculation is done;
        //condition
        String Count="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksBeforeMid`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
        
//        
//        System.out.println("Average of section 5 cse423 "+average1);
//        System.out.println(average2);
//        System.out.println(average3);
//        System.out.println(average4);
//        System.out.println(average5);
        
        }catch(Exception ex){
    Logger.getLogger(MyConnection.class.getName()).log(Level.SEVERE,null,ex);
 }
//          JavaFXBubble J=new JavaFXBubble();
          //value sent
   
//          
//          J.count1=count1;
//          J.count2=count2;
//          J.count3=count3;
//          J.count4=count4;
//          J.count5=count5;
//       J.limits=50;
//     System.out.println("Average1 "+average1);
//    System.out.println("Average2 "+average2);
//    System.out.println("Average3 "+average3); 

 System.out.println("Average of section  "+ Course +" "+First+" " +average1);
        System.out.println("Average of section  "+ Course +" "+Second+" " +average2);
        System.out.println("Average of section  "+ Course +" "+Third+" " +average3);
        System.out.println("Average of section  "+ Course +" "+Fourth+" " +average4);
        System.out.println("Average of section  "+ Course +" "+Fifth+" " +average5);
    JavaFXBubble.FacultyID=FacultyID;
   
         //edit here
  
//  JavaFXBubble.main(args);
//  JavaFXBubble.launch(args);
OverlaidBarChartDemo J=new OverlaidBarChartDemo("Performances");
J.Value1=average1;

J.Value2=average2;
J.Value3=average3;
J.Value4=average4;
J.Value5=average5;     

J.first=First;
J.second=Second;
J.third=Third;
J.fourth=Fourth;
J.fifth=Fifth;
J.limit=50;
System.out.println("section1 "+J.first);
       
//          J.First=First;
//          J.Second=Second;
//          J.Third=Third;
//          J.Fourth=Fourth;
//          J.Fifth=Fifth;
//System.out.println(J.Value1);


        OverlaidBarChartDemo.main(null);
        
        
        
        
     
  
  
  
        
        
        
    }//GEN-LAST:event_jButton1_BeforeMidsActionPerformed

    private void jTextField2_SecondSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2_SecondSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2_SecondSectionActionPerformed

    private void jTextField3_ThirdSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3_ThirdSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3_ThirdSectionActionPerformed

    private void jTextField1_FirstSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1_FirstSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1_FirstSectionActionPerformed

    private void jTextField7_CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7_CourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7_CourseActionPerformed

    private void jButton2_FinalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2_FinalsActionPerformed
 int First;
        int Second;
        int Third;
        int Fourth;
        int Fifth;
        
        int count1=0;
        int count2=0;
        int count3=0;
        int count4=0;
        int count5=0;
        
        String first;
        String second;
        String third;
        String fourth;
        String fifth;
        
        String query1;
        String query2;
        String query3;
        String query4;
        String query5;
        
        String query6;
        String query7;
        String query8;
        String query9;
        String query10;
        
        PreparedStatement ps1=null;
        PreparedStatement ps2=null;
        PreparedStatement ps3=null;
        PreparedStatement ps4=null;
        PreparedStatement ps5=null;
        
        PreparedStatement ps6=null;
        PreparedStatement ps7=null;
        PreparedStatement ps8=null;
        PreparedStatement ps9=null;
        PreparedStatement ps10=null;
        
        
        ResultSet rs1;
        ResultSet rs2;
        ResultSet rs3;
        ResultSet rs4;
        ResultSet rs5;
        
        ResultSet rs6;
        ResultSet rs7;
        ResultSet rs8;
        ResultSet rs9;
        ResultSet rs10;
        
        float average1=0;
        float average2=0;
        float average3=0;
        float average4=0;
        float average5=0;
        ///// for the number of the particular section
        String Course;
//////////////////////////////////////////////////////////////////

first=jTextField1_FirstSection.getText();
second=jTextField2_SecondSection.getText();
third=jTextField3_ThirdSection.getText();
fourth=jTextField4_FourthSection.getText();
fifth=jTextField5_FifthSection.getText();

        if(first.equals("")){
      First=0;
        }else{
         First=Integer.parseInt(jTextField1_FirstSection.getText());//////////
        }
       if(second.equals("")){
      Second=0; 
       }else{
       Second=Integer.parseInt(jTextField2_SecondSection.getText());///////////
       }
       if(third.equals("")){
       Third=0;
       }else {
       Third=Integer.parseInt(jTextField3_ThirdSection.getText());//////
       }if(fourth.equals("")){
       Fourth=0;
       }else{
       Fourth=Integer.parseInt(jTextField4_FourthSection.getText());//////
       }
       if(fifth.equals("")){
       Fifth=0;
       }else{
       Fifth=Integer.parseInt(jTextField5_FifthSection.getText());/////////
       }
       Course=jTextField7_Course.getText();
        
       /////////////////////////////////////////////////////////////////////////////////////
      //ok etotuku
        // whether null or not
        //the values have been assigned
        try{
        if(First==0){
        count1=0;
        }else{
            query1="SELECT avg(`TotalMarksFinal`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=? "; //the query for the average
        
   ps1 = MyConnection.getConnection().prepareStatement(query1);
    ps1.setString(1, String.valueOf(First));  //First
    ps1.setString(2, Course);  
    ps1.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs1 = ps1.executeQuery();

  ////////////////////////////////////////////////////
            if(rs1.next()){
            average1=rs1.getFloat(1);
             query6="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksFinal`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps6 = MyConnection.getConnection().prepareStatement(query6);
    ps6.setFloat(1,average1) ;  //First
    ps6.setString(2,FacultyID );  
    ps6.setString(3,String.valueOf(First));
 ps6.setString(4,Course);
 rs6=ps6.executeQuery();
 if(rs6.next()){
 count1=rs6.getInt(1);
 System.out.println("Count "+ count1);
 }else{
 System.out.println("No count");
 }
 ///////////////////////////////ektar count kora
//        System.out.println(average1);
            }else{
   System.out.println("empty");
            }
            
        }
        if(Second==0){
        
        }
        else{
            query2="SELECT avg(`TotalMarksFinal`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=?"; //the query for the average
        
             ps2 = MyConnection.getConnection().prepareStatement(query2);
    ps2.setString(1, String.valueOf(Second));  //First
    ps2.setString(2, Course);  
    ps2.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs2 = ps2.executeQuery();
 
 if(rs2.next()){
            average2=rs2.getFloat(1);
//            System.out.println(average2);
 query7="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksFinal`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps7 = MyConnection.getConnection().prepareStatement(query7);
    ps7.setFloat(1,average2) ;  //First
    ps7.setString(2,FacultyID );  
    ps7.setString(3,String.valueOf(Second));
 ps7.setString(4,Course);
 rs7=ps7.executeQuery();
 if(rs7.next()){
 count2=rs7.getInt(1);
 System.out.println("Count "+ count2);
 }else{
 System.out.println("No count");
 }
            }else{
   System.out.println("empty");
            }
 
        }
        if(Third==0){
        
        }else{
            query3="SELECT avg(`TotalMarksFinal`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=?"; //the query for the average
        
              ps3 = MyConnection.getConnection().prepareStatement(query3);
    ps3.setString(1, String.valueOf(Third));  //First
    ps3.setString(2, Course);  
    ps3.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs3 = ps3.executeQuery();
 if(rs3.next()){
            average3=rs3.getFloat(1);
             query8="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksFinal`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps8 = MyConnection.getConnection().prepareStatement(query8);
    ps8.setFloat(1,average3) ;  //First
    ps8.setString(2,FacultyID );  
    ps8.setString(3,String.valueOf(Third));
 ps8.setString(4,Course);
 rs8=ps8.executeQuery();
 if(rs8.next()){
 count3=rs8.getInt(1);
 System.out.println("Count "+ count3);
 }else{
 System.out.println("No count");
 }
//            System.out.println(average3);
            }else{
   System.out.println("empty");
            }
        }
        
        
        
        if(Fourth==0){
        
        }else{
            query4="SELECT avg(`TotalMarksFinal`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=?"; //the query for the average
         ps4 = MyConnection.getConnection().prepareStatement(query4);
    ps4.setString(1, String.valueOf(Fourth));  //First
    ps4.setString(2, Course);  
    ps4.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs4 = ps4.executeQuery();
            if(rs4.next()){
            average4=rs4.getFloat(1);
             query9="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksFinal`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps9 = MyConnection.getConnection().prepareStatement(query9);
    ps9.setFloat(1,average4) ;  //First
    ps9.setString(2,FacultyID );  
    ps9.setString(3,String.valueOf(Fourth));
 ps9.setString(4,Course);
 rs9=ps9.executeQuery();
 if(rs9.next()){
 count4=rs9.getInt(1);
 System.out.println("Count "+ count4);
 }else{
 System.out.println("No count");
 }
//            System.out.println(average4);
            }else{
   System.out.println("empty");
            }
        }
        if(Fifth==0){
        
        }else{
            query5="SELECT avg(`TotalMarksFinal`) FROM mydb.facultystudent WHERE `Section`=? AND `Course`=? AND `FacultyID`=?"; //the query for the average
          ps5 = MyConnection.getConnection().prepareStatement(query5);
    ps5.setString(1, String.valueOf(Fifth));  //First
    ps5.setString(2, Course);  
    ps5.setString(3,FacultyID);
// Statement st=conn.createStatement();
 //=st.executeQuery(query1);
 rs5 = ps5.executeQuery();
 if(rs5.next()){
            average5=rs5.getFloat(1);
             query10="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksFinal`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
 ps10 = MyConnection.getConnection().prepareStatement(query10);
    ps10.setFloat(1,average5) ;  //First
    ps10.setString(2,FacultyID );  
    ps10.setString(3,String.valueOf(Fifth));
 ps10.setString(4,Course);
 rs10=ps10.executeQuery();
 if(rs10.next()){
 count5=rs10.getInt(1);
 System.out.println("Count "+ count5);
 }else{
 System.out.println("No count");
 }
//            System.out.println(average5);
            }else{
   System.out.println("empty");
            }
            
        }
        
        //////////////////////////average calculation is done;
        //condition
        String Count="SELECT count(`StudentName`) FROM mydb.facultystudent WHERE (`TotalMarksFinal`>?) AND `FacultyID`=? AND `Section`=? AND `Course`=?";
        
        
        System.out.println("Average of section  "+ Course +" "+First+" " +average1);
        System.out.println("Average of section  "+ Course +" "+Second+" " +average2);
        System.out.println("Average of section  "+ Course +" "+Third+" " +average3);
        System.out.println("Average of section  "+ Course +" "+Fourth+" " +average4);
        System.out.println("Average of section  "+ Course +" "+Fifth+" " +average5);
        
        }catch(Exception ex){
    Logger.getLogger(MyConnection.class.getName()).log(Level.SEVERE,null,ex);
 }
//          JavaFXBubble J=new JavaFXBubble();
//          //value sent
//          J.average1=average1;
//          J.average2=average2;
//          J.average3=average3;
//          J.average4=average4;
//          J.average5=average5;
//          
//          J.First=First;
//          J.Second=Second;
//          J.Third=Third;
//          J.Fourth=Fourth;
//          J.Fifth=Fifth;
//          
//          J.count1=count1;
//          J.count2=count2;
//          J.count3=count3;
//          J.count4=count4;
//          J.count5=count5;
//          J.limits=100;
//       
//     System.out.println("Average "+average1);
//    
//     
//    JavaFXBubble.FacultyID=FacultyID;
//   
//         
//  
//  JavaFXBubble.main(args);
//  JavaFXBubble.launch(args);
  
        OverlaidBarChartDemo J=new OverlaidBarChartDemo("Performances");
J.Value1=average1;

J.Value2=average2;
J.Value3=average3;
J.Value4=average4;
J.Value5=average5;          
        

J.first=First;
J.second=Second;
J.third=Third;
J.fourth=Fourth;
J.fifth=Fifth;
J.limit=100;


//          J.First=First;
//          J.Second=Second;
//          J.Third=Third;
//          J.Fourth=Fourth;
//          J.Fifth=Fifth;
//System.out.println(J.Value1);


        OverlaidBarChartDemo.main(null);
        
        
        
        
             
        
//          J.First=First;
//          J.Second=Second;
//          J.Third=Third;
//          J.Fourth=Fourth;
//          J.Fifth=Fifth;
//System.out.println(J.Value1);


        
        
        
        
        
          
        
//          J.First=First;
//          J.Second=Second;
//          J.Third=Third;
//          J.Fourth=Fourth;
//          J.Fifth=Fifth;
//System.out.println(J.Value1);


        
        
        
        
     
        
        
    }//GEN-LAST:event_jButton2_FinalsActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

                  HomePageFacultyOntheGo SS=new HomePageFacultyOntheGo();
        SS.FacultyID=FacultyID;
        SS.setVisible(true);
        SS.pack();
        SS.setLocationRelativeTo(null);
        this.dispose();   ///setting my sail to the homepage
        SS.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();   ///setting my sail to the homepage
        //      J.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SectionSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SectionSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SectionSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SectionSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SectionSelection().setVisible(true);
            }
        }
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton1_BeforeMids;
    private javax.swing.JButton jButton2_Finals;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1_FirstSection;
    private javax.swing.JTextField jTextField2_SecondSection;
    private javax.swing.JTextField jTextField3_ThirdSection;
    private javax.swing.JTextField jTextField4_FourthSection;
    private javax.swing.JTextField jTextField5_FifthSection;
    private javax.swing.JTextField jTextField7_Course;
    // End of variables declaration//GEN-END:variables
}
